import 'package:flutter/material.dart';
import "MoreOptionsScreen.dart";
import 'SearchScreen.dart';
import 'ScannerScreen.dart';
import 'MessageScreen.dart';
import 'MyFileScreen.dart';

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  final List<Widget> _pages = [
    SearchScreen(),
    ScannerScreen(),
    MessageScreen(),
    MyFileScreen(),
  ];
  int _currentIndex = 0;
  int _currentMonthIndex = DateTime.now().month - 1; // Default to current month

  DateTime _selectedDate = DateTime.now();
  List<Map<String, String>> pinnedEvents = []; // Liste des événements épinglés
  List<Map<String, String>> taskList = []; // Liste des tâches normales

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Center(
          child: Text("Student Planner"),
        ),
        leading: IconButton(
          icon: const Icon(Icons.more_vert),
          onPressed: () {
            Navigator.of(context).push(
              MaterialPageRoute(
                builder: (context) => const MoreOptionsScreen(),
              ),
            );
          },
        ),
        actions: [
          IconButton(
            icon: const Icon(Icons.calendar_today), // Icône calendrier en haut à droite
             onPressed: _showDatePicker, // ✨ Ajoute ta propre méthode ici
          ),
        ],
      ),
      body: Column(
        children: [
          _buildPinnedEventsSection(), // Affichage des événements épinglés sous forme de cartes
          Expanded(child: _buildTaskList()), // Affichage des tâches sous forme de liste
        ],
      ),
      body: _pages[_currentIndex],
      floatingActionButton: FloatingActionButton(
        onPressed: () => _showTasDialog(context), // ✨ Afficher le dialogue d'ajout de tâche
        child: const Icon(Icons.add),
      ),
      bottomNavigationBar: BottomNavigationBar(
        type: BottomNavigationBarType.fixed,
        currentIndex: _currentIndex,
        selectedItemColor: Colors.blue,
        onTap: (int index) {
          setState(() {
            _currentIndex = index;
          });
        },
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.search),
            label: 'Search',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.qr_code_scanner),
            label: 'Scanner',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.message),
            label: 'Message',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.folder),
            label: 'My Files',
          ),
        ],
      ),
    );
  }

  void _showDatePicker() async {
    final DateTime? pickedDate = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(2000),
      lastDate: DateTime(2100),
    );
    if (pickedDate != null) {
      setState(() {
        _currentMonthIndex = pickedDate.month - 1;
      });
    }
  }
}
